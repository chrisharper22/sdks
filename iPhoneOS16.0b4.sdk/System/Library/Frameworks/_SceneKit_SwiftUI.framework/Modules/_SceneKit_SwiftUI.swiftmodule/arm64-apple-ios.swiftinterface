// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.123.6 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios16.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name _SceneKit_SwiftUI
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 581.1
@_exported import SceneKit
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
public struct SceneView : SwiftUI.View {
  public struct Options : Swift.OptionSet {
    public let rawValue: Swift.Int
    public init(rawValue: Swift.Int)
    public static let allowsCameraControl: _SceneKit_SwiftUI.SceneView.Options
    public static let rendersContinuously: _SceneKit_SwiftUI.SceneView.Options
    public static let autoenablesDefaultLighting: _SceneKit_SwiftUI.SceneView.Options
    public static let jitteringEnabled: _SceneKit_SwiftUI.SceneView.Options
    public static let temporalAntialiasingEnabled: _SceneKit_SwiftUI.SceneView.Options
    public typealias ArrayLiteralElement = _SceneKit_SwiftUI.SceneView.Options
    public typealias Element = _SceneKit_SwiftUI.SceneView.Options
    public typealias RawValue = Swift.Int
  }
  public init(scene: SceneKit.SCNScene? = nil, pointOfView: SceneKit.SCNNode? = nil, options: _SceneKit_SwiftUI.SceneView.Options = [], preferredFramesPerSecond: Swift.Int = 60, antialiasingMode: SceneKit.SCNAntialiasingMode = .multisampling4X, delegate: SceneKit.SCNSceneRendererDelegate? = nil, technique: SceneKit.SCNTechnique? = nil)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s17_SceneKit_SwiftUI0A4ViewV4bodyQrvp", 0) __
}
