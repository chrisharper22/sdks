// -*- C++ -*-
//===--------------------------- cwctype ----------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_CWCTYPE
#define _LIBCPP_CWCTYPE

/*
    cwctype synopsis

Macros:

    WEOF

namespace std
{

Types:

    wint_t
    wctrans_t
    wctype_t

int iswalnum(wint_t wc);
int iswalpha(wint_t wc);
int iswblank(wint_t wc);  // C99
int iswcntrl(wint_t wc);
int iswdigit(wint_t wc);
int iswgraph(wint_t wc);
int iswlower(wint_t wc);
int iswprint(wint_t wc);
int iswpunct(wint_t wc);
int iswspace(wint_t wc);
int iswupper(wint_t wc);
int iswxdigit(wint_t wc);
int iswctype(wint_t wc, wctype_t desc);
wctype_t wctype(const char* property);
wint_t towlower(wint_t wc);
wint_t towupper(wint_t wc);
wint_t towctrans(wint_t wc, wctrans_t desc);
wctrans_t wctrans(const char* property);

}  // std

*/

#include <__config>
#include <cctype>
#include <wctype.h>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

_LIBCPP_USING_IF_EXISTS(::wint_t);
_LIBCPP_USING_IF_EXISTS(::wctrans_t);
_LIBCPP_USING_IF_EXISTS(::wctype_t);
_LIBCPP_USING_IF_EXISTS(::iswalnum);
_LIBCPP_USING_IF_EXISTS(::iswalpha);
_LIBCPP_USING_IF_EXISTS(::iswblank);
_LIBCPP_USING_IF_EXISTS(::iswcntrl);
_LIBCPP_USING_IF_EXISTS(::iswdigit);
_LIBCPP_USING_IF_EXISTS(::iswgraph);
_LIBCPP_USING_IF_EXISTS(::iswlower);
_LIBCPP_USING_IF_EXISTS(::iswprint);
_LIBCPP_USING_IF_EXISTS(::iswpunct);
_LIBCPP_USING_IF_EXISTS(::iswspace);
_LIBCPP_USING_IF_EXISTS(::iswupper);
_LIBCPP_USING_IF_EXISTS(::iswxdigit);
_LIBCPP_USING_IF_EXISTS(::iswctype);
_LIBCPP_USING_IF_EXISTS(::wctype);
_LIBCPP_USING_IF_EXISTS(::towlower);
_LIBCPP_USING_IF_EXISTS(::towupper);
_LIBCPP_USING_IF_EXISTS(::towctrans);
_LIBCPP_USING_IF_EXISTS(::wctrans);

_LIBCPP_END_NAMESPACE_STD

#endif  // _LIBCPP_CWCTYPE
